@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Username" class="form-control" placeholder="Please choose your username." disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FirstName" class="form-control" placeholder="Please enter your first name." />
                <label asp-for="Input.FirstName" class="form-label"></label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.LastName" class="form-control" placeholder="Please enter your last name." />
                <label asp-for="Input.LastName" class="form-label"></label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number."/>
                <label asp-for="Input.PhoneNumber" class="form-label"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.City" class="form-control" />
                <label asp-for="Input.City" class="form-label"></label>
                <span asp-validation-for="Input.City" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Province" class="form-control" />
                <label asp-for="Input.Province" class="form-label"></label>
                <span asp-validation-for="Input.Province" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <select asp-for="Input.Country" id="Country" class="form-control" onchange="updatePostalCodeValidation()">
                    <option value="">Select a Country</option>
                    <option value="Canada">Canada</option>
                    <option value="USA">USA</option>
                </select>
                <label asp-for="Input.Country" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PostalCode" class="form-control" id="PostalCode" disabled />
                <label asp-for="Input.PostalCode" class="form-label"></label>
                <span asp-validation-for="Input.PostalCode" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Enable/disable the Postal Code input and bind input event
            $('#Country').on('change', function () {
                updatePostalCodeValidation();
            });

            $('#PostalCode').on('input', function () {
                validatePostalCode();
            });
        });

        function updatePostalCodeValidation() {
            var selectedCountry = $('#Country').val();
            var postalCodeInput = $('#PostalCode');

            // Enable/disable the Postal Code input based on the selected country
            postalCodeInput.prop('disabled', (selectedCountry === ''));

            // Set the regex pattern based on the selected country
            var regexPattern = getRegexPatternForCountry(selectedCountry);

            postalCodeInput.data('val-regex-pattern', regexPattern);

            console.log("postalcode", postalCodeInput)


            var validator = $('#PostalCode').validate({ rules: { PostalCode: { regex: regexPattern } } });

        }

        function validatePostalCode() {
            // Validate the Postal Code input
            $('#PostalCode').validate();
            console.log($('#PostalCode').valid())
        }

        function getRegexPatternForCountry(country) {
            switch (country) {
                case "USA":
                    return "\d{5}(?:-\d{4})";
                case "Canada":
                    return "[A-Z]\d[A-Z]\s{0,1}\d[A-Z]\d";
                default:
                    return "";
            }
        }
    </script>
}